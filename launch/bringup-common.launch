<launch>
    <arg name="bind_ip" default="" doc="IP to bind the server socket to. If specified or if no robot_ip is specified, it will start RRC in server mode. If empty, it will bind to all interfaces." />
    <arg name="robot_ip" default="" doc="IP of the controller. If specified, it will start RRC in client mode." />
    <arg name="robot_streaming_port" default="30101" doc="Port of the streaming interface" />
    <arg name="robot_state_port" default="30201" doc="Port of the state interface" />
    <arg name="sequence_check_mode" default="none" doc="Define sequence ID check mode. Supported: none|all|incoming|outgoing" />
    <arg name="enable_tcp_sockets" default="false" />
    <arg name="enable_webservices" default="true" />
    <arg name="webservices_username" default="Default User" doc="Username to connect to robot webservices" />
    <arg name="webservices_password" default="robotics" doc="Password to connect to robot webservices" />

    <param name="bind_ip_address" type="str" value="$(arg bind_ip)"/>
    <param name="robot_ip_address" type="str" value="$(arg robot_ip)"/>
    <param name="robot_streaming_port" type="int" value="$(arg robot_streaming_port)"/>
    <param name="robot_state_port" type="int" value="$(arg robot_state_port)"/>
    <param name="sequence_check_mode" type="str" value="$(arg sequence_check_mode)"/>

    <!-- driver -->
    <node name="$(anon compas_rrc_driver)"
          pkg="compas_rrc_driver"
          type="driver.py"
          respawn="true"
          output="screen"
          if="$(arg enable_tcp_sockets)"/>

    <!-- webservice client -->
    <node name="$(anon compas_rrc_webservice_client)"
          pkg="compas_rrc_driver"
          type="webservice_client.py"
          respawn="true"
          output="screen"
          args="--webservice-username $(arg webservices_username) --webservice-password $(arg webservices_password)"
          if="$(arg enable_webservices)"/>
</launch>
